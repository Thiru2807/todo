{"ast":null,"code":"var _jsxFileName = \"/home/thiru/Downloads/Thiru/react/demo/src/ComponentA.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ComponentA() {\n  _s();\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: {\n      errors\n    }\n  } = useForm();\n  const [submittedValues, setSubmittedValues] = useState([]);\n  const onSubmit = data => {\n    console.log(\"submit button is clicked\", data);\n    setSubmittedValues([...submittedValues, data.title]);\n    reset();\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"To-Do Form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"title\",\n        ...register('title')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: submittedValues.map((value, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n          children: value\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 12\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(ComponentA, \"DXCKALx0Cog11k8xTPuUq7JZ00M=\", false, function () {\n  return [useForm];\n});\n_c = ComponentA;\nexport default ComponentA;\nvar _c;\n$RefreshReg$(_c, \"ComponentA\");","map":{"version":3,"names":["useState","useForm","jsxDEV","_jsxDEV","Fragment","_Fragment","ComponentA","_s","register","handleSubmit","reset","formState","errors","submittedValues","setSubmittedValues","onSubmit","data","console","log","title","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","map","value","index","_c","$RefreshReg$"],"sources":["/home/thiru/Downloads/Thiru/react/demo/src/ComponentA.js"],"sourcesContent":["import { useState } from \"react\";\nimport {useForm} from \"react-hook-form\";\n\nfunction ComponentA(){\n    const {\n        register,\n        handleSubmit,\n        reset,\n        formState: { errors },\n      } = useForm()\n      const [submittedValues, setSubmittedValues] = useState([]);\n      const onSubmit = (data) => {\n        console.log(\"submit button is clicked\",data);\n        setSubmittedValues([...submittedValues, data.title]);\n        reset();\n      }\n    return (\n        <>\n        <div>To-Do Form</div>\n        <form onSubmit={handleSubmit(onSubmit)}>\n            <input type=\"text\" placeholder=\"title\" {...register('title')}></input>\n            <button type=\"submit\">Submit</button>\n        </form>\n        <div>\n           <ul>\n          {submittedValues.map((value, index) => (\n            <p key={index}>{value}</p>\n          ))}\n        </ul>\n        </div>\n        </>\n    );\n}\n\nexport default ComponentA"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAAQC,OAAO,QAAO,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAExC,SAASC,UAAUA,CAAA,EAAE;EAAAC,EAAA;EACjB,MAAM;IACFC,QAAQ;IACRC,YAAY;IACZC,KAAK;IACLC,SAAS,EAAE;MAAEC;IAAO;EACtB,CAAC,GAAGX,OAAO,CAAC,CAAC;EACb,MAAM,CAACY,eAAe,EAAEC,kBAAkB,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAMe,QAAQ,GAAIC,IAAI,IAAK;IACzBC,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAACF,IAAI,CAAC;IAC5CF,kBAAkB,CAAC,CAAC,GAAGD,eAAe,EAAEG,IAAI,CAACG,KAAK,CAAC,CAAC;IACpDT,KAAK,CAAC,CAAC;EACT,CAAC;EACH,oBACIP,OAAA,CAAAE,SAAA;IAAAe,QAAA,gBACAjB,OAAA;MAAAiB,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACrBrB,OAAA;MAAMY,QAAQ,EAAEN,YAAY,CAACM,QAAQ,CAAE;MAAAK,QAAA,gBACnCjB,OAAA;QAAOsB,IAAI,EAAC,MAAM;QAACC,WAAW,EAAC,OAAO;QAAA,GAAKlB,QAAQ,CAAC,OAAO;MAAC;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS,CAAC,eACtErB,OAAA;QAAQsB,IAAI,EAAC,QAAQ;QAAAL,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnC,CAAC,eACPrB,OAAA;MAAAiB,QAAA,eACGjB,OAAA;QAAAiB,QAAA,EACAP,eAAe,CAACc,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBAChC1B,OAAA;UAAAiB,QAAA,EAAgBQ;QAAK,GAAbC,KAAK;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAC1B;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA,eACJ,CAAC;AAEX;AAACjB,EAAA,CA7BQD,UAAU;EAAA,QAMTL,OAAO;AAAA;AAAA6B,EAAA,GANRxB,UAAU;AA+BnB,eAAeA,UAAU;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}