{"ast":null,"code":"var _jsxFileName = \"/home/thiru/Downloads/Thiru/react/demo/src/ComponentA.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ComponentA() {\n  _s();\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm();\n  const [submittedValues, setSubmittedValues] = useState([]); // Define submittedValues here\n\n  const onSubmit = data => {\n    console.log(\"submit button is clicked\", data);\n    setSubmittedValues([...submittedValues, data.title]); // Assuming 'title' is the input field you want to display\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"To-Do Form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"title\",\n        ...register(\"title\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: submittedValues.map((value, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: value\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(ComponentA, \"IJNcBglYwcdR7M/z2072re/3yYg=\", false, function () {\n  return [useForm];\n});\n_c = ComponentA;\nexport default ComponentA;\nvar _c;\n$RefreshReg$(_c, \"ComponentA\");","map":{"version":3,"names":["React","useState","useForm","jsxDEV","_jsxDEV","Fragment","_Fragment","ComponentA","_s","register","handleSubmit","formState","errors","submittedValues","setSubmittedValues","onSubmit","data","console","log","title","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","map","value","index","_c","$RefreshReg$"],"sources":["/home/thiru/Downloads/Thiru/react/demo/src/ComponentA.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\n\nfunction ComponentA() {\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm();\n  const [submittedValues, setSubmittedValues] = useState([]); // Define submittedValues here\n\n  const onSubmit = (data) => {\n    console.log(\"submit button is clicked\", data);\n    setSubmittedValues([...submittedValues, data.title]); // Assuming 'title' is the input field you want to display\n  };\n\n  return (\n    <>\n      <div>To-Do Form</div>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <input type=\"text\" placeholder=\"title\" {...register(\"title\")} />\n        <button type=\"submit\">Submit</button>\n      </form>\n      <div>\n        <ul>\n          {submittedValues.map((value, index) => (\n            <li key={index}>{value}</li>\n          ))}\n        </ul>\n      </div>\n    </>\n  );\n}\n\nexport default ComponentA;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,OAAO,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE1C,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAM;IACJC,QAAQ;IACRC,YAAY;IACZC,SAAS,EAAE;MAAEC;IAAO;EACtB,CAAC,GAAGV,OAAO,CAAC,CAAC;EACb,MAAM,CAACW,eAAe,EAAEC,kBAAkB,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAE5D,MAAMc,QAAQ,GAAIC,IAAI,IAAK;IACzBC,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEF,IAAI,CAAC;IAC7CF,kBAAkB,CAAC,CAAC,GAAGD,eAAe,EAAEG,IAAI,CAACG,KAAK,CAAC,CAAC,CAAC,CAAC;EACxD,CAAC;EAED,oBACEf,OAAA,CAAAE,SAAA;IAAAc,QAAA,gBACEhB,OAAA;MAAAgB,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACrBpB,OAAA;MAAMW,QAAQ,EAAEL,YAAY,CAACK,QAAQ,CAAE;MAAAK,QAAA,gBACrChB,OAAA;QAAOqB,IAAI,EAAC,MAAM;QAACC,WAAW,EAAC,OAAO;QAAA,GAAKjB,QAAQ,CAAC,OAAO;MAAC;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eAChEpB,OAAA;QAAQqB,IAAI,EAAC,QAAQ;QAAAL,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC,CAAC,eACPpB,OAAA;MAAAgB,QAAA,eACEhB,OAAA;QAAAgB,QAAA,EACGP,eAAe,CAACc,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBAChCzB,OAAA;UAAAgB,QAAA,EAAiBQ;QAAK,GAAbC,KAAK;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAa,CAC5B;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA,eACN,CAAC;AAEP;AAAChB,EAAA,CA7BQD,UAAU;EAAA,QAKbL,OAAO;AAAA;AAAA4B,EAAA,GALJvB,UAAU;AA+BnB,eAAeA,UAAU;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}